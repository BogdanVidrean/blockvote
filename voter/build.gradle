plugins {
    id 'java'
}

group 'com'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    compile project(':core')

    // https://mvnrepository.com/artifact/org.springframework/spring-context
    compile group: 'org.springframework', name: 'spring-context', version: '5.1.5.RELEASE'

    // https://mvnrepository.com/artifact/com.jfoenix/jfoenix
    compile group: 'com.jfoenix', name: 'jfoenix', version: '8.0.7'

    // https://mvnrepository.com/artifact/de.jensd/fontawesomefx
    compile group: 'de.jensd', name: 'fontawesomefx', version: '8.9'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

    // https://mvnrepository.com/artifact/org.web3j/core
    compile group: 'org.web3j', name: 'core', version: '4.1.1'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

def jdk = System.getProperty("java.home")
def moduleName = "com.blockvote.voter"
def mainClass = "com.blockvote.voter.Main"

// Mac OS client
task executableJarMacOs(type: Jar, dependsOn: assemble) {
    manifest {
        attributes(
                'Main-Class': mainClass,
        )
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from('src/main/resources/geth_client/mac_os/geth') {
        include 'geth'
        into('geth_client')
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA', 'geth_client/*'
    with jar
}

// Linux client
task executableJarLinux(type: Jar, dependsOn: assemble) {
    manifest {
        attributes(
                'Main-Class': mainClass,
        )
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from('src/main/resources/geth_client/linux/geth') {
        include 'geth'
        into('geth_client')
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA', 'geth_client/*'
    with jar
}

task javaPackagerMacOsEmbeddedRuntime(type: Exec, dependsOn: executableJarMacOs) {
    workingDir project.projectDir
    //  Working config for creating a bundle with jre
    commandLine = [
            'javaPackager',
            '-deploy',
            '-nosign',
            '-title', project.name,
            '-name', project.name,
            '-native', 'image',
            '-outdir', "${buildDir}/distribution",
            '-outfile', project.name,
            '-srcfiles', "${buildDir}/libs/voter-1.0-SNAPSHOT.jar",
            '-srcdir', ".",
            '-appclass', mainClass
    ]
}
